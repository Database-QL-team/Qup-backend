name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. JDK 설치 (Gradle 빌드 필요 시)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew build

      # 4. Docker 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Docker 이미지 빌드
      - name: Build Docker Image
        run: docker build -t backend:latest .

      # 6. Docker 이미지 푸시
      - name: Push Docker Image
        run: |
          docker tag backend:latest ${{ secrets.DOCKER_USERNAME }}/backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

  deploy-on-ec2:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # 7. EC2에서 Docker 컨테이너 실행 (로그 로테이션 포함)
      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@ec2-3-35-166-244.ap-northeast-2.compute.amazonaws.com << 'EOF'
            sudo su -

            docker stop $(docker ps -q) || true
            docker rm $(docker ps -a -q) || true
            docker system prune -af || true

            docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest

            docker run --name backend \
              --restart unless-stopped \
              -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
              -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
              -d -p 8080:8080 \
              --log-driver json-file \
              --log-opt max-size=10m \
              --log-opt max-file=3 \
              ${{ secrets.DOCKER_USERNAME }}/backend:latest
          EOF
